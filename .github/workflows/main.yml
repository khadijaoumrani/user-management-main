name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar:
    runs-on: self-hosted  # Utilisez votre runner auto-hébergé
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Cette étape vérifie le code source

    - name: Setup JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adoptopenjdk'

    - name: Cache SonarQube scanner
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar-cache-${{ hashFiles('**/*.java') }}
        restore-keys: |
          ${{ runner.os }}-sonar-cache-

    - name: SonarQube Scan
      run: |
        sonar-scanner \
          -Dsonar.projectKey=user-management-main  # Remplacez par le nom de votre projet GitHub
          -Dsonar.host.url=http://localhost:9000    # Remplacez par l'URL de votre SonarQube local ou cloud
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar:
    runs-on: self-hosted  # Utilisez votre runner auto-hébergé
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Cette étape vérifie le code source

    - name: Setup JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adoptopenjdk'

    - name: Cache SonarQube scanner
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar-cache-${{ hashFiles('**/*.java') }}
        restore-keys: |
          ${{ runner.os }}-sonar-cache-

    - name: SonarQube Scan
      run: |
        sonar-scanner \
          -Dsonar.projectKey=user-management-main  # Remplacez par le nom de votre projet GitHub
          -Dsonar.host.url=http://localhost:9000    # Remplacez par l'URL de votre SonarQube local ou cloud
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
